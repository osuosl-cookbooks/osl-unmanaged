task default: ['test']

desc 'Default gate tests to run'
task test: [:rubocop, :berks_vendor]

def run_command(command)
  if File.exist?('Gemfile.lock')
    sh %(bundle exec #{command})
  else
    sh %(chef exec #{command})
  end
end

PROV_PATH = '.'.freeze

task :destroy_all do
  Rake::Task[:destroy_machines].invoke
  run_command('rm -rf Gemfile.lock && rm -rf Berksfile.lock && ' \
    'rm -rf cookbooks/')
end

desc 'Destroy machines'
task :destroy_machines do
  run_command("chef-client --force-formatter -z #{PROV_PATH}/destroy_all.rb")
end

desc 'Vendor your cookbooks/'
task :berks_vendor do
  run_command('rm -rf Gemfile.lock Berksfile.lock cookbooks/')
  run_command('berks vendor cookbooks')
end

desc 'Create Chef Key'
task :create_key do
  unless File.exist?('.chef/validator.pem')
    sh %(chef exec ruby -e "require 'openssl';
File.binwrite('.chef/validator.pem', OpenSSL::PKey::RSA.new(2048).to_pem)")
  end
end

desc 'OpenStack HAProxy'
task openstack_haproxy: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_haproxy.rb")
end

desc 'OpenStack Staging (x86)'
task openstack_x86:
    [
      :create_key,
      :openstack_x86_controller,
      :openstack_x86_compute
    ]

desc 'OpenStack Staging Controller (x86)'
task openstack_x86_controller: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_x86_controller.rb")
end

desc 'OpenStack Staging Compute (x86)'
task openstack_x86_compute: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_x86_compute.rb")
end

desc 'OpenStack Staging (ppc64)'
task openstack_ppc64:
    [
      :create_key,
      :openstack_ppc64_controller,
      :openstack_ppc64_compute
    ]

desc 'OpenStack Staging Controller (ppc64)'
task openstack_ppc64_controller: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_ppc64_controller.rb")
end

desc 'OpenStack Staging Compute (ppc64)'
task openstack_ppc64_compute: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_ppc64_compute.rb")
end

desc 'OpenStack Staging Mellanox Neo (ppc64)'
task openstack_ppc64_neo: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/openstack_ppc64_neo.rb")
end

desc 'DNS Master/Slave/Jenkins'
task dns_all:
    [
      :create_key,
      :dns_master,
      :dns_slave,
      :dns_jenkins
    ]

desc 'DNS Master'
task dns_master: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/dns_master.rb")
end

desc 'DNS Slave'
task dns_slave: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/dns_slave.rb")
end

desc 'DNS Jenkins'
task dns_jenkins: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/dns_jenkins.rb")
end

desc 'Omnibus'
task omnibus: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/omnibus.rb")
end

desc 'AJATS'
task ajats: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/ajats.rb")
end

desc 'Ganeti'
task ganeti: [:create_key] do
  run_command('chef-client --force-formatter -z ' \
    "#{PROV_PATH}/ganeti.rb")
end

desc 'Blow everything away'
task clean: [:destroy_all]

# CI tasks
require 'rubocop/rake_task'
desc 'Run RuboCop'
RuboCop::RakeTask.new(:rubocop)
