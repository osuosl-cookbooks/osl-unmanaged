require 'mixlib/shellout'

task default: ['test']

desc 'Default gate tests to run'
task test: [:rubocop, :berks_vendor]

def run_command(command)
  if File.exist?('Gemfile.lock')
    sh %(bundle exec #{command})
  else
    sh %(cinc exec #{command})
  end
end

PROV_PATH = '.'.freeze
bootstrap_options = '-U osuadmin --sudo --bootstrap-version 16'

task :destroy_all do
  Rake::Task[:destroy_machines].invoke
  run_command('rm -rf Gemfile.lock && rm -rf Berksfile.lock && ' \
    'rm -rf cookbooks/')
end

desc 'Destroy machines'
task :destroy_machines do
  run_command('terraform destroy -auto-approve')
end

desc 'Vendor your cookbooks/'
task :berks_vendor do
  run_command('rm -rf Gemfile.lock Berksfile.lock cookbooks/')
  run_command('berks vendor cookbooks')
end

desc 'Set CHEF_SERVER env var'
task :chef_server_env do
  chef_zero = Mixlib::ShellOut.new('terraform output chef_zero')
  chef_zero.run_command
  chef_zero.error!
  ENV['CHEF_SERVER'] = chef_zero.stdout.chomp
end

desc 'Upload data to chef-zero server'
task knife_upload: [:berks_vendor, :chef_zero, :chef_server_env] do
  run_command('knife upload . --force -c .chef/knife.rb --concurrency 1')
end

desc 'Create Chef Key'
task :create_key do
  unless File.exist?('.chef/validator.pem')
    sh %(chef exec ruby -e "require 'openssl';
File.binwrite('.chef/validator.pem', OpenSSL::PKey::RSA.new(2048).to_pem)")
  end
end

desc 'Chef-zero VM'
task :chef_zero do
  run_command('terraform apply -auto-approve')
end

desc 'OpenStack Staging (x86)'
task openstack_x86:
    [
      :create_key,
      :openstack_x86_controller,
      :openstack_x86_compute,
    ]

desc 'OpenStack Staging Controller (x86)'
task openstack_x86_controller: [:create_key, :chef_zero, :chef_server_env] do
  attributes = '\'{ "ceph": { "fsid-secret": "ae3f1d03-bacd-4a90-b869-1a4fabb107f2" }, "osl-openstack": { "node_type": "controller" } }\''
  run_list = %w(
    role[base_managed]
    recipe[firewall::osl_only]
    role[ceph]
    role[ceph_mon]
    role[ceph_mgr]
    role[ceph_osd]
    role[ceph_setup]
    role[openstack_provisioning]
    recipe[osl-prometheus::server]
    recipe[osl-openstack::ops_database]
    recipe[osl-openstack::controller]
    role[openstack_cinder]
    recipe[provision_test::orchestration]
    recipe[provision_test::tempest_x86]
    recipe[provision_test::tempest]
  )
  run_command("knife bootstrap otest-controller.osuosl.org #{bootstrap_options} -j #{attributes} -r #{run_list.join(',')}")
end

desc 'OpenStack Staging Compute (x86)'
task openstack_x86_compute: [:create_key, :chef_zero, :chef_server_env] do
  attributes = '\'{ "ceph": { "fsid-secret": "ae3f1d03-bacd-4a90-b869-1a4fabb107f2" } }\''
  run_list = %w(
    role[base_managed]
    role[openstack_provisioning]
    recipe[osl-openstack::compute]
  )
  run_command("knife bootstrap otest2.osuosl.bak #{bootstrap_options} -j #{attributes} -r #{run_list.join(',')}")
  run_command("knife bootstrap otest3.osuosl.bak #{bootstrap_options} -j #{attributes} -r #{run_list.join(',')}")
end

desc 'OpenStack Staging (ppc64)'
task openstack_ppc64:
    [
      :create_key,
      :openstack_ppc64_controller,
      :openstack_ppc64_compute,
    ]

desc 'OpenStack Staging Controller (ppc64)'
task openstack_ppc64_controller: [:create_key, :chef_zero, :chef_server_env] do
  attributes = '\'{ "ceph": { "fsid-secret": "ae3f1d03-bacd-4a90-b869-1a4fabb107f2" }, "osl-openstack": { "node_type": "controller" } }\''
  run_list = %w(
    role[base_managed]
    role[ceph]
    role[ceph_mon]
    role[ceph_mgr]
    role[ceph_osd]
    role[ceph_setup]
    role[openstack_provisioning_ppc64]
    recipe[osl-openstack::ops_database]
    recipe[osl-openstack::controller]
    role[openstack_cinder]
    recipe[provision_test::orchestration]
    recipe[provision_test::tempest_ppc64]
    recipe[provision_test::tempest]
  )
  run_command("knife bootstrap otest-openpower-controller.osuosl.org #{bootstrap_options} -j #{attributes} -r #{run_list.join(',')}")
end

desc 'OpenStack Staging Compute (ppc64)'
task openstack_ppc64_compute: [:create_key, :chef_zero, :chef_server_env] do
  attributes = '\'{ "ceph": { "fsid-secret": "ae3f1d03-bacd-4a90-b869-1a4fabb107f2" } }\''
  run_list = %w(
    role[base_managed]
    role[openstack_provisioning_ppc64]
    recipe[osl-openstack::compute]
  )
  run_command("knife bootstrap openpower8.osuosl.bak #{bootstrap_options} -j #{attributes} -r #{run_list.join(',')}")
end

desc 'Ganeti'
task ganeti: [:create_key, :chef_zero, :chef_server_env] do
  run_list = %w(
    role[base_managed]
    recipe[osl-ganeti::osuosl_test]
  )
  run_command("knife bootstrap gtest2.osuosl.bak #{bootstrap_options} -r #{run_list.join(',')}")
  run_command("knife bootstrap gtest3.osuosl.bak #{bootstrap_options} -r #{run_list.join(',')}")
end

desc 'Blow everything away'
task clean: [:destroy_all]

# CI tasks
require 'rubocop/rake_task'
desc 'Run RuboCop'
RuboCop::RakeTask.new(:rubocop)
